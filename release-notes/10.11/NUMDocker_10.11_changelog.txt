    SoftwareAG Universal Messaging Server Docker image Changelog

                    September 2024

________________________________________________________________________________
This file provides list of changes made to the Docker images of SoftwareAG Universal Messaging Server. 
For additional information about SoftwareAG Universal Messaging Server, see the online documentation at
https://documentation.softwareag.com/universal_messaging/num10-11/10-11_UM_webhelp/index.html



[10.11.0.20] NUM-23165

Universal Messaging no longer provides a separate tools container image on the Software AG Container 
Repository. 
As an alternative, you can run a Universal Messaging server container in serverless mode by passing 
TOOLS_ONLY=true environment variable when starting a container. Containers started in this way can 
only be used to run the included administrative tools to manage other containers.

[10.11.0.17] NUM-20916

Using the “nstopserver” command in a Docker environment might result in a Universal Messaging server 
not shutting down gracefully and returning errors upon restart.
The issue might happen in cases when there are many channels and queues, and the server did not have 
enough time to complete all the processes when stopping.
The issue is resolved. You can use the “nserverdaemon stop” command on UNIX instead of “nstopserver” 
to stop the server gracefully.
For more information about stopping the server and its behavior during shutdown, see the Universal 
Messaging documentation.

[10.11.0.8] NUM-18664

The Docker image for the Universal Messaging server now supports the log4j2 framework for logging 
and provides a default log4j2 configuration. The default log4j2 configuration does NOT store the 
nirvana.log log file on disk but streams the log output to STDOUT.
You can configure the UM log level by using the UM Admin API or Enterprise Manager after you enable 
the log4J logging framework for the container.
For more details about log4j2 support in Docker images for Universal Messaging, see the Universal 
Messaging documentation.

[10.11.0.6] NUM-15197

The Universal Messaging RealmInformationCollector tool fails to run in a Docker container.
When you try to start the RealmInformationCollector in a Docker container, the tool returns
the following error: 'Universal Messaging realm server component not present in the current
installation directory (/opt/softwareag/UniversalMessaging/tools/runner/./../../..). 
So this operation is not applicable.' 
This issue is now resolved.

[10.11.0.1] NUM-16857

Running the Software AG command-line tools in the <SoftwareAG_directory>\common\bin directory
in a Docker container fails due to an incorrect directory path in the scripts.
The issue is resolved.

[10.11.0.0] NUM-19088

Several classpath configurations for Log4j2 were missing from the Server_Common.conf file in our 
Universal Messaging Server docker images. As a result it was not possible to start containers with 
Log4j2 logging enabled.
The issue is now resolved.

[10.11.0.0] NUM-16132

Several files created by the Docker context were being included in the Docker image which could 
potentially lead to issues later on when starting containers. 
This issue has been resolved by adding Docker context files to the .dockerignore file.

[10.11.0.0] NUM-16877

Universal Messaging Server Docker image has been updated to use Red Hat Universal Base Image 8 
Minimal with JDK 11 as base image.

[10.11.0.0] NUM-16606

Containers started from the Universal Messaging Server Docker image now use the HealthMonitor plugin 
as health check.

[10.11.0.0] NUM-14466

Introduced STARTUP_COMMAND environment variable for docker containers. Property value will be used 
as command and will be executed in parallel once the server is up and running. This command can be 
used to configure the server at start-up.


