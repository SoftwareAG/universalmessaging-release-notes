                  Universal Messaging webMethods RealmServer 10.11 SP0 Fix 17 Readme
               
                                  November 2023

________________________________________________________________________________

This file provides important information for applying Universal Messaging RealmServer 10.11 SP0 Fix 
17 to Universal Messaging 10.11 SP0 installations. For additional information about Universal 
Messaging, see the index.html file in the docs directory of your installation. 


Contents:

1.0   Fix Name
2.0   Fix ID
3.0   Product(s)/Component(s) Affected
4.0   Requirements
5.0   Platform Support
6.0   Cautions and Warnings 
7.0   Fix Contents
8.0   Installation
9.0   Uninstallation
10.0  Globalization 
11.0  Copyright
12.0  Contacting Us



1.0 Fix Name

Universal Messaging webMethods RealmServer 10.11 SP0 Fix 17 Build ***BUILD_NUMBER***



2.0 Fix ID

NUM_10.11_wM_RealmServer_Fix17



3.0 Product(s)/Component(s) Affected

Universal Messaging webMethods RealmServer 10.11 SP0



4.0 Requirements

None.



5.0 Platform Support

Same platforms as product release.



6.0 Cautions and Warnings

It is strongly advisable that the Universal Messaging client libraries
are patched together with the realm server binaries, and that both are kept
up to date with latest Universal Messaging official fix set.


7.0 Fix Contents

In addition to including resolutions to product defects, a fix may also include
enhancements to existing functionality and features. Any of these items can 
result in new or changed built-in services, APIs, or configuration parameters. 
Review the fix contents carefully before applying the fix.
 	
This fix is cumulative, which means that it is an aggregate of previous fixes 
for the release.

NUM-20830 (NUM_10.11_wM_RealmServer_Fix17)

AMQP keep alives from a UM server may cause a decode-error during transport, or the idle timeout 
threshold may be missed due to improper keep alive processing on a UM server, causing an AMQP 
client to disconnect and close.
This issue is now resolved.  AMQP clients should now remain connected unless gracefully shutdown, or 
the idle timeout threshold (if applicable) is exceeded after proper keep alive processing.

NUM-20803 (NUM_10.11_wM_RealmServer_Fix17)

Universal Messaging now supports plugins for all UM license types regardless of the 'Plugins' key 
value in the license file.

NUM-20719 (NUM_10.11_wM_RealmServer_Fix17)

AMQP framing/decode errors are possible on the client side due to a possible race condition in the 
QPID Proton J library.
To resolve these errors, the server must synchronize access to a 
org.apache.qpid.proton.engine.Transport for all instances where frames could be written.

NUM-20674 (NUM_10.11_wM_RealmServer_Fix17)

Universal Messaging deletes local stores when clustering is disabled in the license file, but a 
cluster configuration is already present on the server.
After you create a Universal Messaging cluster under a license that allows clustering and then 
update the license file to a license with disabled clustering, when you start the server, Universal 
Messaging deletes all local stores. The issue occurs because the cluster configuration is still 
present in the system.
The issue is resolved. Now the Universal Messaging server checks for such conditions and writes a 
warning in the nirvana.log file and in the console output. The server deletes local stores only 
when clustering is enabled in the license file and a cluster configuration is present in the data 
directory.

NUM-20619 (NUM_10.11_wM_RealmServer_Fix17)

In a Universal Messaging cluster, a slave node might fail to redirect a client application to the 
master node because the nodes fail to exchange information about the public connections during the 
formation of the cluster.
The issue is resolved.

NUM-20522 (NUM_10.11_wM_RealmServer_Fix17)

Universal Messaging might still have high-CPU usage issues when using the AMQP protocol despite the 
AMQP performance optimizations introduced in NUM-17343.
The issue affects Universal Messaging versions 10.11 and 10.15.
The issue is resolved.

NUM-20364 (NUM_10.11_wM_RealmServer_Fix16)

When setting the realm ACL for a client, a realm server in a Universal Messaging cluster becomes 
unresponsive because of a deadlock condition.
The issue is resolved.

NUM-20312 (NUM_10.11_wM_RealmServer_Fix16)

Bouncy Castle libraries have been updated from vulnerable version 1.60 to a safer version 1.70.

NUM-20080 (NUM_10.11_wM_RealmServer_Fix16)

NA

NUM-19238 (NUM_10.11_wM_RealmServer_Fix16)

Updated, the old "Xalan" library from version 2.7.2 that was vulnerable to an integer truncation 
issue when processing malicious XSLT stylesheets, to the newest and safer one 2.7.3 version.

NUM-20214 (NUM_10.11_wM_RealmServer_Fix15)

A vulnerability was discovered in the third-party Xerces library used in Universal Messaging.
The issue is resolved. The Xerces jar used in Universal Messaging has been upgraded to version 
2.12.1 from versions 2.11 and 2.3.

NUM-20041 (NUM_10.11_wM_RealmServer_Fix15)

Universal Messaging instance fails to connect over an SSL connection when the number of HTTP headers 
fields exceeds the limit of 30 elements.
The issue is resolved. Now you can configure the size of the header buffer using the HTTPHeaderSize 
server parameters and maximum size of the header buffer using HTTPMaxHeaderSize server parameters. 
For details about configuring these server properties, see the Universal Messaging documentation.

NUM-19992 (NUM_10.11_wM_RealmServer_Fix15)

A vulnerability was discovered in the third-party org.json library used in Universal Messaging.
The issue is resolved. The org.json jar used in Universal Messaging has been upgraded to version 
20230227 from version 20160810.

NUM-19917 (NUM_10.11_wM_RealmServer_Fix15)

Having many synchronous consumers active on a queue might cause high CPU usage and slow performance 
in Universal Messaging.
The issue is resolved.

NUM-19890 (NUM_10.11_wM_RealmServer_Fix15)

Using JMX, you can monitor only one Universal Messaging HTTP-SocketAccept or
HTTP-SSLSocketAccept thread pool at a time and you cannot identify which thread
pool you are monitoring.
Out of many existing HTTP-SocketAccept or HTTP-SSLSocketAccept thread pools,
you can monitor only one at a time using JMX and it is not clear which one it is.
The JMX monitoring tool just displays the generic name HTTP-SocketAccept.
The issue happens because the socket accept thread pool name does not include
the name of the corresponding Universal Messaging interface and the JMX server
cannot identify the different thread pools.
The issue is resolved. Now each HTTP-SocketAccept or HTTP-SSLSocketAccept thread
pool name includes the name of the corresponding interface, for example,
HTTP-SocketAccept-nhp1, and all thread pools are visible and identifiable in your
JMX monitoring tool.

NUM-17648 (NUM_10.11_wM_RealmServer_Fix15)

When the used by customer nodeJS AMQP (Rhea) client was closed- the associated AMQP processing tasks 
were not closed appropriately. This caused high CPU usage caused by UM's server AMQP processing 
threads. Similar high CPU usage was also possible on a idle, non-closed AMQP client connections.
This issue is now resolved.

NUM-20016 (NUM_10.11_wM_RealmServer_Fix14)

Universal Messaging might reach a state of deadlock when simultaneously attempting to close multiple 
connections due to a read request timeout.?
The issue might occur when the server tries to close the connections of multiple subscribers of 
channels with shared durables.
The issue is now resolved.

NUM-19946 (NUM_10.11_wM_RealmServer_Fix14)

The Universal Messaging server now logs additional diagnostic information when
thread-pool monitoring reports purging for a JMS channel that is slow or stalled.
The information includes the name of the channel for which the purge operation is executed,
the duration of the last purge, and the time it takes the server to compile a list of individual 
events eligible for purging.
For clustered channels, the master realm also logs the last requested purgeable EID,
the last lowest purgeable EID received by the slave realms, and the purge request-response time.

NUM-19901 (NUM_10.11_wM_RealmServer_Fix14)

When the error occurs while parsing the jaas config file during authentication, no error was logged 
until the log level is changed to warning. 
With this fix, such error gets logged in nirvana.log file with default log level (error).

NUM-19896 (NUM_10.11_wM_RealmServer_Fix14)

A Universal Messaging server instance fails to start when the JMX Exporter agent is enabled on the 
AIX operating system. The issue occurs because some special characters in the 
jmx_sag_um_exporter.yaml file cause encoding issues.
The issue is resolved. 
Note: These changes are only applicable to newly created instance (after applying the fix). For the 
existing instance, one should manually replace the jmx_sag_um_exporter.yaml in the server's bin 
directory with the one from server's templates directory.

NUM-19854 (NUM_10.11_wM_RealmServer_Fix14)

The Universal Messaging server and Java client now log additional diagnostic information when thread 
pool monitoring reports a slow or stalled task.
Additional information is logged for slow or stalled tasks in the following cases:
- A slow or stalled channel listener task in the Java client. The thread pool monitoring logs the 
channel name and the size of the incoming event queue.
- A slow connection accept task in the server. The thread pool monitoring logs the connection 
details (IP address and port), the type of the client, and connection statistics for the respective 
network interface.
- A slow connection read task in the server. The thread pool monitoring logs the connection details 
(IP address and port), and also minimum, maximum, and current response times for the connection.

NUM-19818 (NUM_10.11_wM_RealmServer_Fix14)

Master node is changing sporadically. 
Master node is changed in some random time interval due to high memory consumption on the node, 
related to Multiplex sessions.
The issue is fixed. An optimization of Multiplex sessions memory consumption is implemented.

NUM-19817 (NUM_10.11_wM_RealmServer_Fix14)

When a Universal Messaging cluster is part of a zone, events that are already acknowledged and 
consumed might accumulate on the channels of the zone.
These zone channels have a last acknowledged EID of -1 on the clustered join, which causes the 
backlog of events. In addition, zone channels that are deleted and then recreated can cause the 
clustered join to be ahead of the channel's own last EID. In this situation, events can go missing 
if further publishes are performed through the clustered join.
The issue is resolved. The Universal Messaging server has been modified to correct for such issues. 
In addition, the healthchecker tool of the Realm Information Collector has been enhanced to 
identify joins that are ahead of the channel's last EID.

NUM-19234 (NUM_10.11_wM_RealmServer_Fix14)

Library 'protobuf-java' is updated to safer version '3.21.12' because of vulnerability.

NUM-19230 (NUM_10.11_wM_RealmServer_Fix14)

A vulnerability of 3d party component Snakeyaml  in jmx_prometheus_javaagent.jar was discovered (as  
Snakeyaml of 1.29 v was used in jmx_prometheus_javaagent.jar)
The issue is resolved. The jmx_prometheus_javaagent binary has been upgraded from version 0.16.1 to 
version 0.18.0 (which contains snakeyaml 2.0 - which mitigated the vulnerability).

NUM-19080 (NUM_10.11_wM_RealmServer_Fix14)

Universal Messaging (UM) clusters within a zone with bi-directional forwarding of events have event 
forwarding and stability issues under high load conditions. 
When the issues occur, the server logs include entries about deadlocks, connection multiplexer IO 
exceptions, and stalled tasks with Join Daemon.
In addition, a UM realm instance in the cluster might cause an increase in CPU usage.
The issues are resolved.

NUM-19375 (NUM_10.11_wM_RealmServer_Fix13)

Adding or modifying supported ciphers for a Universal Messaging server SSL interface using 
command-line tools might fail.
When you run the AddHTTPSInterface, AddSSLInterface, or ModifyInterface command-line tools and 
specify the 'ciphers' optional parameter, the tools might fail to execute, although the specified 
ciphers are part of the list of supported SSL ciphers. Adding a cipher might fail with the 
following error: "Illegal argument passed: Cipher not found in supported cipher list".
The issue is resolved.

NUM-19301 (NUM_10.11_wM_RealmServer_Fix13)

When Integration Server uses Universal Messaging as a JMS provider, it might stop responding when 
you try to enable or disable JMS triggers.
The issue is resolved.

NUM-19252 (NUM_10.11_wM_RealmServer_Fix13)

Enterprise Manager displays invalid realm property values imported from an XML realm configuration 
file using the ninstancemanager command-line tool.
After you import a realm configuration from an XML file using ninstancemanager and the configuration 
contains invalid realm property values, Universal Messaging might not automatically replace the 
invalid values with valid ones on start-up. As a result, Enterprise Manager displays the invalid 
property values, which could lead to exceptions and unexpected behavior of Enterprise Manager.
The issue is resolved. 

NUM-19214 (NUM_10.11_wM_RealmServer_Fix13)

Previously we could have a situation when a session got the channel attribute protobuf descriptors 
cached and not get it updated when channel protobuf descriptors were updated from any other 
session.
Now it is fixed and protobuf descriptors are getting updated in cache of any connected sessions.

NUM-18981 (NUM_10.11_wM_RealmServer_Fix13)

Fixed a rare deadlock caused by an abnormal close in the Javascript websocket driver. A side effect 
of this deadlock is that a UM server may shutdown and automatically restart.

NUM-18949 (NUM_10.11_wM_RealmServer_Fix13)

CPU usage in Universal Messaging might spike due to Prometheus monitoring.
When JMX monitoring using Prometheus is enabled in a Universal Messaging server,
CPU usage can reach 99% even during insignificant loads.
The issue is resolved. Universal Messaging now provides an updated jmx_sag_um_exporter.yaml file in 
the <Software_AG_directory>\UniversalMessaging\sever\templates directory, which limits additional 
queries made by the JMX Exporter agent. For information about how to apply the new file to existing 
server instances, see the topic on monitoring Universal Messaging using Prometheus in the Universal 
Messaging documentation.

NUM-16609 (NUM_10.11_wM_RealmServer_Fix13)

Creating and then deleting many channels or queues might result in Universal Messaging leaking 
memory and shutting down. 
The issue is now resolved. 

NUM-19165 (NUM_10.11_wM_RealmServer_Fix12)

Previously if  protobuf descriptors were updated for the channel on master/slave node, all other 
nodes stayed with old protobuf descriptors. 
And if the master was restarted,  the new master was selected and all nodes again restore old 
protobuf descriptors.
Durable filters were not able to be applied to the event and stopped receiving events at this point.
Now it is fixed and each node of the cluster will update channel protobuf descriptors when it is 
changed in one of the nodes.

NUM-19127 (NUM_10.11_wM_RealmServer_Fix12)

The issue is similar to NUM-19165 and both have similar solutions,
i.e. previously protobuf descriptors were updated only on the one node of the cluster.
After restarting the master and cluster itself old protobufs descriptors were restored in?all 
cluster nodes.?Now it is fixed for both NUM-19165 and NUM-19127

NUM-18339 (NUM_10.11_wM_RealmServer_Fix11)

A Universal Messaging Java client fails to connect to the server when the hostname of the server or 
of the machine that hosts the server contains special characters, such as an underscore.
The issue occurs because the Java URI API does not support special characters in hostnames.
The issue is resolved.

NUM-16633 (NUM_10.11_wM_RealmServer_Fix11)

For a cluster wide zone based channel, it is possible that events will not get forwarded from a 
source cluster to a target cluster that is in the same zone.  Nodes that are in a target cluster 
could overwrite the interest of one another, and show a lack of consumer interest even though an 
actual consumer is present.
This issue is now resolved by properly noting the interest that is received from all nodes in the 
target cluster.

NUM-16457 (NUM_10.11_wM_RealmServer_Fix11)

Despite using a network drive as a data directory, Universal Messaging might store some .mem files 
locally. 
Universal Messaging might incorrectly save some .mem files on a local drive, even though you are 
using a network drive as a data directory for storing channels and queues. 
The issue is now resolved.

NUM-14876 (NUM_10.11_wM_RealmServer_Fix11)

Address message loss scenarios for remote cluster joins when:
a. A cluster wide channel is deleted and recreated. 
b. A remote cluster join connects to a slave instead of the master node (the solution here is to 
force all remote cluster join connections to connect to the master node of a destination cluster).

NUM-16652 (NUM_10.11_wM_RealmServer_Fix10)

In Legion of the Bouncy Castle BC before 1.61, attackers can obtain sensitive information about a 
private exponent because of Observable Differences in Behavior to Error Inputs. This occurs in 
org.bouncycastle.crypto.encodings.OAEPEncoding. Sending invalid ciphertext that decrypts to a short 
payload in the OAEP Decoder could result in the throwing of an early exception, potentially leaking 
some information about the private exponent of the RSA private key performing the encryption.
https://nvd.nist.gov/vuln/detail/CVE-2020-26939
CVSS Score: 5.3 Medium

NUM-18730 (NUM_10.11_wM_RealmServer_Fix9)

ReadPool tasks could be stalled when connections are abruptly closed. This defect manifests itself 
by server log entries such as 
[Mon Jul 11 10:37:55.294 CEST 2022] [UM-Monitor-Thread] ThreadPool: <ReadPool> Stalled task found, 
Thread ReadPool:86 has been active for 61500(ms) running task class 
com.pcbsys.foundation.drivers.fServerHTTPDriver$OpenConnection, Idle Threads 89, Allocated Threads 
100, Queued Tasks 0, Task Executed 1807968920
This issue is now resolved. 

NUM-18668 (NUM_10.11_wM_RealmServer_Fix8)

When you enable the ThreadDumpOnSlowTask thread-pool monitoring property, Universal Messaging might 
generate many thread dumps over a short time, which could slow performance.
The issue is resolved.

NUM-18664 (NUM_10.11_wM_RealmServer_Fix8)

The Docker image for the Universal Messaging server now supports the log4j2 framework for logging 
and provides a default log4j2 configuration. The default log4j2 configuration does NOT store the 
nirvana.log log file on disk but streams the log output to STDOUT.
You can configure the UM log level by using the UM Admin API or Enterprise Manager after you enable 
the log4J logging framework for the container.
For more details about log4j2 support in Docker images for Universal Messaging, see the Universal 
Messaging documentation.

NUM-18582 (NUM_10.11_wM_RealmServer_Fix8)

Cluster migration from an older Universal Messaging version to version 10.11 and higher might fail 
with a recovery error.
Some of the cluster nodes remain in recovery mode and Universal Messaging returns the following 
error: " Index recovery can not find the target channel".
The issue is resolved.

NUM-18559 (NUM_10.11_wM_RealmServer_Fix8)

After a restart of the master node in a cluster, Universal Messaging might not delete .mem files for 
a channel on a slave node after all events are acknowledged.
Universal Messaging might not delete the .mem files for a multi-file store channel on a slave node 
in a cluster even after all events have been acknowledged. The issue occurs when the channel uses a 
JMS engine and after you edit a storage property for the channel and restart the master node.
The issue is resolved.

NUM-18421 (NUM_10.11_wM_RealmServer_Fix8)

Universal Messaging might log thread dumps twice in nirvana.log.
When a stalled or slow moving task is detected, or a thread dump is requested, it might be logged 
twice in nirvana.log which is unnecessary.
The issue is resolved.

NUM-18121 (NUM_10.11_wM_RealmServer_Fix8)

Improve the performance of cluster pipeline processing by using a different data structure.

NUM-18472 (NUM_10.11_wM_RealmServer_Fix7)

Migrating shared queue durables fails with an EOFException.
When you are migrating shared queue durables from a version of Universal Messaging older than 10.5 
to a newer version, Universal Messaging writes an EOFException in the nirvana.log file.
The issue is now resolved.

NUM-18425 (NUM_10.11_wM_RealmServer_Fix7)

Creating a durable on the JMX server fails with a MalformedObjectNameException.
When you have enabled the JMX server and try to create a durable on a channel, Universal Messaging 
writes a MalformedObjectNameException in the nirvana.log file. The durable gets created on the 
Universal Messaging server, but not on the JMX server. The issue occurs because the JMX beans and 
attributes cannot validate a durable name containing special characters.
The issue is now resolved.

NUM-18372 (NUM_10.11_wM_RealmServer_Fix7)

In a Universal Messaging (UM) cluster that uses multiplexed sessions, the primary realm server 
instance stops responding because of increased CPU usage, which stalls the tasks on the UM server. 
The issue occurs when the multiplexed SSL session between the server and client does not close 
properly.
The issue is resolved.
javax.net.ssl.SSLException: closing inbound before receiving peer's close_notify
The fix for this issue involves correcting and refactoring specific code in the server's NIO layer 
to address the issue.

NUM-18264 (NUM_10.11_wM_RealmServer_Fix7)

When Universal Messaging is configured to use the Logback framework, rolling the logs might fail 
with an exception.
When rolling the logs on a Windows operating system, if the Logback framework fails to rename a log 
file, it throws a NullPointerException.
The issue is resolved. Universal Messaging now supports version 1.2.11 of the Logback framework.

NUM-18203 (NUM_10.11_wM_RealmServer_Fix6)

A Universal Messaging client might fail to connect to the server with a "backlog exceeded" error.
The client cannot connect to the server and Universal Messaging writes the following
error to the nirvana.log: "Backlog queue exceeded limit, unable to process incoming connection".
In addition, the client might report many slow-moving tasks related to event processing. The issue 
occurs
after installing the fix for NUM-17781 for your Universal Messaging version, which introduces a 
regression.
The issue is resolved. The restriction on the total number of connections being authenticated now 
falls back on
the Connection Monitor to ensure that there are not too many connections being authenticated at the 
same time.
This enforces the limit based on the host from which the connections are coming and not based on the 
total of connections.

NUM-18197 (NUM_10.11_wM_RealmServer_Fix6)

Universal Messaging continuously writes NullPointerExceptions to the nirvana.log file, which 
originate from the JMX context.
The issue occurs if you create a secure interface and do not specify correct certificate attributes.
The issue is resolved.

NUM-18111 (NUM_10.11_wM_RealmServer_Fix6)

The performance of a Universal Messaging server might deteriorate when a durable or a queue has many 
outstanding events.
The issue is resolved.

NUM-17996 (NUM_10.11_wM_RealmServer_Fix6)

Clients version 10.3 and older might fail to receive events from a queue
when they are connected to a slave node in a Universal Messaging cluster.
The issue occurs when a synchronous queue consumer consumes events from the queue.
Under these conditions, the slave might return an array of one event to the synchronous
queue consumer.
The issue is resolved.

NUM-17909 (NUM_10.11_wM_RealmServer_Fix6)

A Universal Messaging realm server logs errors about insufficient disk space even when the free disk 
space is sufficient.
The server logs an error into the nirvana.log file that "Free disk space has reduced below warning 
threshold percentage."
The issue is resolved. Now the server logs an error message only when the free disk space required 
for the realm server to continue processing is below the defined minimum threshold.

NUM-17829 (NUM_10.11_wM_RealmServer_Fix6)

When you use the nInstanceManager tool to create a Universal Messaging realm instance, the instance 
gets created, but the tool returns warning messages.
The nInstanceManager tool returns the following messages:
- WARNING: An illegal reflective access operation has occurred
- WARNING: Illegal reflective access by com.sun.xml.bind.v2.runtime.reflect.opt.Injector
(file:/opt/softwareag/1011/UniversalMessaging/lib/jaxb-impl-2.3.0.jar) to method
java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int).
The issue is now resolved.

NUM-17767 (NUM_10.11_wM_RealmServer_Fix6)

Exempt file, which is used to allow users to bypass authentication when it is mandatory, has been 
updated to support wildcard entries.
The exempt file supports wildcard entries using the * (asterisk) symbol, such as: user@*, *@host. 
However, *@* is not supported, as it will allow any user to bypass authentication, hence making the 
use of authentication worthless. 
Note: Username ?*? is a valid username, but if such user needs to be added into the exempt list, it 
will be read as a wildcard. In such cases we recommend ?*? username to not be used.
Functionality changed:
-authentication exempt users were loaded by default from a ?DSECURITYFILE file. This is now changed 
and the ?DSECURITYFILE is not used anymore to load the exempt users. Exempt users now need to be 
explicitly defined using the -DNirvana.auth.exempt property. 
-when exempt user with invalid password was provided, the expected outcome was authentication 
failure. Now, we do not make difference between exempt user with or without password, so we expect 
successful login in both cases, when user from exempt list tries to login.

NUM-17743 (NUM_10.11_wM_RealmServer_Fix6)

The fix for this issue can improve cluster node recovery times and prevent a recovery loop from 
occurring. This applies directly to any channel or queue that employs multi file storage.

NUM-17735 (NUM_10.11_wM_RealmServer_Fix6)

Universal Messaging now offers more verbose logging related to DNS resolution.

NUM-17275 (NUM_10.11_wM_RealmServer_Fix6)

Improved the logging for missing JAAS login module

NUM-15197 (NUM_10.11_wM_RealmServer_Fix6)

The Universal Messaging RealmInformationCollector tool fails to run in a Docker container.
When you try to start the RealmInformationCollector in a Docker container, the tool returns
the following error: 'Universal Messaging realm server component not present in the current
installation directory (/opt/softwareag/UniversalMessaging/tools/runner/./../../..). 
So this operation is not applicable.' 
This issue is now resolved.

NUM-17790 (NUM_10.11_wM_RealmServer_Fix4)

Universal Messaging now supports flat namespaces for topics and queues in the JMX server bean. When 
you enable the new functionality, a JMX queue namespace, for example, will have the format 
"destinationName=/q1/q2/q3".
By default, JMX namespaces for topics and queues are created using a folder tree structure, for 
example, "Folder1=q1,Folder2=q2,destinationName=queuename", which might cause issues for some 
monitoring solutions.
To enable the flat namespace functionality, you must set to ?true? a new realm configuration 
property, ?FlatStoreJMXBeanNamespace", as part of the JVM management configuration for a realm. To 
switch to flat namespaces, take the following steps:
1. In Enterprise Manager, select a realm and go to Config > JVM Management.
2. Set the "FlatStoreJMXBeanNamespace" property to ?true?.
3. Disable the ?EnableJMX? property to stop the JMX server.
4. Set ?EnableJMX? to ?true? again.
If you are using Prometheus to monitor Universal Messaging, you must edit the ?pattern? parameter 
for all topic and queue attributes in the jmx_sag_um_exporter.yaml file between steps 3 and 4, as 
follows:
Old version of pattern:
- pattern: com.softwareag.um.server<type=Broker, brokerName=(\S*), destinationType=Queue, 
(.*)><>(TotalPublished)
New version of pattern:
- pattern: com.softwareag.um.server<type=Broker, brokerName=(\S*), destinationType=Queue, 
destinationName=(\S*)><>(TotalPublished)
You must replace (.*) in the old file version with destinationName=(\S*) in the new file version. A 
restart of the server is not required because the changes take effect at run time.

NUM-17781 (NUM_10.11_wM_RealmServer_Fix4)

When connecting many sockets to NHPS and NSPS interfaces in a very short period of time (Load 
Testing) the Accept Thread Pool of the Interface will face exhaustion and excess CPU usage as we 
wait for each socket to be authenticated. 
This issue has been fixed by delaying when we accept new connections to ensure that the Accept 
Threads are only invoked once a socket has negotiated TLS, the TLS negotiation will be undertaken 
by selector threads on the interface.

NUM-17708 (NUM_10.11_wM_RealmServer_Fix4)

Pre-10.7 synchronous clients are not able to retrieve events from a standard, non-durable queue on a 
slave node in a cluster.
The fix for this issue will ensure that window sizes are handled properly for older, pre-10.7 
synchronous clients, while post-10.7 synchronous clients will use the new prefetch API instead.

NUM-17689 (NUM_10.11_wM_RealmServer_Fix4)

Universal Messaging Enterprise Manager shows a negative value for Current Connections in the Totals 
section for a shared or serial durable.
The issue is resolved.

NUM-17669 (NUM_10.11_wM_RealmServer_Fix4)

UM server was not able to handle more then thousand simultaneous MQTT connection gracefully- MQTT 
connect time would increase and MQTT clients might start experiencing connect timeouts. 
This is now resolved by optimizing the MQTT connect handling on the server. Depending on the 
environment used, single UM server should be able to handle more then 5000 MQTT connect operations 
simultaneously.
Also UM's ability to work with thousands stores and consumers is also improved.
Following important optimizations were added as part of this fix:
- Durable state saving was optimized by using an buffered output stream, so the save operation is 
performed faster on disk.
- MQTT configuration to configure the EventsPerSpinle channel configuration for auto created topics 
is added:
"Protocol MQTT Config"-> "AutoCreatedStoreSpindleSize". Defaults to 50000. Previously stores were 
created with eventsPerSpindle = 0, which was leading to MQTT auto created stores were created as 
non-multifile stores.
- Durable config was added to enable\disable the Consumer State Monitor.
In case of many consumers, the consumer state monitor used for monitor consumer's health might add 
an additional overhead which can affect the performance of the UM server's Scheduler Pool.
"DurableConfig"->"EnableConsumerStateMonitor". Default value is true, to disable the consumer 
monitor set the value to false.
- A ConcurrentModificationException in the nInterestStorageValidator is fixed.
- For single UM server deployment (non-A/A clustering), the duplicate MQTT ClientID detection is 
optimized to not persist connection state on disk.

NUM-17547 (NUM_10.11_wM_RealmServer_Fix4)

EM was showing internal session ID related information as connection key in the durable tab for 
indexed durables. This prevented end users from finding potentially slow or stuck consumers to 
bounce. The fix is to display IP:Port SessionID formatted key instead of internal session ID info 
so that client connections could be identified in EM and bounced. 

NUM-16649 (NUM_10.11_wM_RealmServer_Fix4)

During the implementation of Bidirectional Client Support we inadvertently changed logs around 
initial connection and authentication which removed clarity of connection failures.
We have reinstated all log entries related to connection and authentication failures.
There was further work done to remediated interface statistics calculations to be accurate for all 
types of connections (UM Native Protocol, MQTT, AMQP, Javascript and all HTTP connections) which 
allows the Total Connection, Authentication Time and Failed connection statistics to be accurate 
for each interface.
Under certain conditions an exception was logged java.lang.NegativeArraySizeException from a thread 
stack including the class ServerLoginContextNegotiator this defect has been resolved, it was a non 
fatal though the log entry did not indicate this.

NUM-15970 (NUM_10.11_wM_RealmServer_Fix4)

When nProtobuf events get published from a Universal Messaging server to the client, the events are 
not processed in the correct order. The issue occurs because the custom Protobuf attributes are not 
set in the nProtobuf events.
The issue is resolved.

NUM-17640 (NUM_10.11_wM_RealmServer_Fix3)

When using NSPS protocol (nsp over SSL) for inter-cluster commmunication, Universal Messaging master 
realm may lockup when writing data to another realm in the cluster if the connection to that realm 
is interrupted. The lockup may prevent the cluster keep alive check to reset the connection and may 
cause the master realm to remain stuck even after the rest of the cluster reforms and elects 
another master.
This issue is now resolved. Universal Messaging server no longer holds any locks when closing an 
inter-realm connection, which enables cluster keep alive handling to close non-responsive 
connections immediately.

NUM-17566 (NUM_10.11_wM_RealmServer_Fix3)

The Universal Messaging server might log NullPointerException error messages when JMX is enabled.
When you enable JMX on Universal Messaging, the UM JMX server might register sync queue readers 
incorrectly and log multiple NullPointerException error messages in the nirvana.log. This issue 
occurs when attempting to read events from a queue with a sync consumer.
The issue is resolved.

NUM-17044 (NUM_10.11_wM_RealmServer_Fix3)

The Universal Messaging realm server now uses the hostname instead of the IP address for 
communication for security purposes.
System requirement: DNS resolution must work properly on the VMs hosting Universal Messaging.

NUM-17463 (NUM_10.11_wM_RealmServer_Fix2)

The upper limit for stalled task warning time (StalledTaskWarningTime) used to be 1 minute which is 
insufficient for some customers which have long running tasks. The upper limit is now increased to 
5 minutes in line with older releases. 

NUM-17415 (NUM_10.11_wM_RealmServer_Fix2)

Restarting Universal Messaging fails with a file I/O error.
The issue might occur when the server tries to load a shared or serial durable with a
selector that has an event buffer size of more than 10 000 symbols. In this case,
Universal Messaging writes the following error in the nirvana.log file:
"Server shutdown initiated due to fatal file I/O error occurred: Unable to load the durable
from, corruption detected...Input exceeded input buffer size."
The issue is resolved. You can now create durables with selectors that have an input event buffer 
size of more than 10 000 symbols.

NUM-17117 (NUM_10.11_wM_RealmServer_Fix2)

When clients use the Universal Messaging channel iterator client API to consume events from
a channel with a shared durable, pausing a session to the server might cause messages to be 
perceived as lost.
The issue occurs because the server does not suspend subscriptions properly when a session is 
paused.
In this case, the server might send events to consumers while the consumers are not ready to process 
them.
Such events are perceived as lost, but will be redelivered once the session is closed and a new one 
is established.
This issue is resolved. Now the Universal Messaging server times out all durable subscriptions
when a session is paused, and clients receive a nRequestTimedOutException.

NUM-17062 (NUM_10.11_wM_RealmServer_Fix2)

During the cluster destruction process, there could be a communication task executing, that updates 
a server's known state of remote nodes. There was a possibility that those two processes could 
interfere with each other, resulting in a NullPointerException logged in the server log file. This 
issue is now resolved.

NUM-17257 (NUM_10.11_wM_RealmServer_Fix1)

Creating a new session to Universal Messaging might fail when working with temporary stores that 
have the autoDelete flag enabled.
Session creation fails with the message "com.pcbsys.nirvana.client.nUnexpectedResponseException:
Received an unexpected response to the request: Unexpected response to handshake request,
class com.pcbsys.nirvana.base.events.nDeleteChannel".
The issue is resolved.

NUM-17150 (NUM_10.11_wM_RealmServer_Fix1)

After migrating to Universal Messaging version 10.1 or above, a secondary node goes down because the 
connection used for a multiplex session stalls.
The issue is resolved.

NUM-17094 (NUM_10.11_wM_RealmServer_Fix1)

A security vulnerability related to the Prometheus JMX functionality was discovered in Universal 
Messaging Docker images.
The issue is resolved. The jmx_prometheus_javaagent binary has been upgraded from version 0.13.0 to 
version 0.16.1.

NUM-16830 (NUM_10.11_wM_RealmServer_Fix1)

The Universal Messaging realm server has memory and performance issues when a memory leak occurs in 
the task scheduler.
The issue is resolved. 

NUM-16785 (NUM_10.11_wM_RealmServer_Fix1)

Having a username that contains "@" results in Universal Messaging logging the exception message 
"Unexpected subject/address format.?, which might flood the nirvana.log and client.log file.
The issue is now resolved.

NUM-16650 (NUM_10.11_wM_RealmServer_Fix1)

Universal Messaging servers might crash because of memory issues related to the JMX connections.
After a client unsubscribes from a durable or queue on a realm server, the Universal Messaging 
server might exhaust the available memory and crash.
The issue occurs because Universal Messaging does not properly remove the JMX connections associated 
with the subscription.
The issue is now resolved.
While fixing this particular issue the overall JMX design was improved an optimized, so other issues 
were fixed as well.
This fix is considered an important one for the JMX functionality, so it is strongly recommended for 
customers which use JMX to install it.

NUM-16534 (NUM_10.11_wM_RealmServer_Fix1)

In a Universal Messaging cluster, the JVM crashes with a memory corruption error caused by 
synchronization issues.
The issue is resolved.

NUM-16041 (NUM_10.11_wM_RealmServer_Fix1)

Slight performance adjustment in UM's internal files handling.

NUM-15870 (NUM_10.11_wM_RealmServer_Fix1)

Improved server start-up when a large number of stores are loaded.

NUM-10065 (NUM_10.11_wM_RealmServer_Fix1)

When non-durable JMS sync consumer on channel was re-subscribed and there are no new events 
published- it was possible the UM server to not delete the old events kept by the old subscriber.
This is now fixed- when the new consumer is added it will properly reset its interest and the old 
events for which we don't have interest anymore will be deleted.

NUM-17251 (NUM_10.11_wM_RealmServer_Fix1)


NUM-16857 (NUM_10.11_wM_RealmServer_Fix1)

Running the Software AG command-line tools in the <SoftwareAG_directory>\common\bin directory
in a Docker container fails due to an incorrect directory path in the scripts.
The issue is resolved.


8.0 Installation

If you are installing a Universal Messaging server fix, please shut down any running Universal
Messaging server instances before installing.
In case the Universal Messaging server instance is a member of a cluster, please apply the
procedure for installing rolling cluster updates described below(*).

If you are installing a Universal Messaging client fix, please shut down any applications such as
Integration server or Enterprise Manager which are using client libraries.

If you are installing a Universal Messaging Enterprise Manager fix, you do not need to shut down the
Universal Messaging server.

Install using the Software AG Update Manager or Command Central (9.5 or later). For instructions,
see the corresponding documentation at http://documentation.softwareag.com.

(*) Universal Messaging cluster is supporting rolling updates for its nodes.
There is a strong recommendation to start applying the new fixes on the Slave nodes and leave the
Master node to be the last one.
(*) Starting with 10.11 Fix 3, Universal Messaging provides updated versions of security libraries with 
the Universal Messaging realm server fixes, if any of these libraries has been updated. You can find 
the libraries in the UniversalMessaging\lib folder.

For each single node that is part of the cluster the customer needs to follow the steps:
1) Shutdown the node. The node will be disconnected from the cluster.
2) Apply the specific fix
3) Start the node. It will be connected back again to the cluster and will be operational
4) Apply the same procedure from 1-3 steps on the next node

In order to have truly no downtime, the client that talks to the Universal Messaging cluster should
also be implemented in a way that it tolerates brief connection loss. A rolling update in a cluster
still means that:
a) When the node that a client is connected to is brought down for maintenance, the connection to
this server, and respectively the cluster, will be lost and has to be re-established. The client
should be able to handle this seamlessly.
b) When the master node of the cluster is brought down for maintenance, the cluster will briefly
go offline until a new master is elected. This is usually a very short time window, but still,
similarly to point a). The client applications should be able to handle it in order to have truly
no downtime from the point of view of the end user.



9.0 Uninstallation

If you are uninstalling a Universal Messaging server fix,
please note that any running Universal Messaging server
instances will be automatically shutdown before installing.

If you are uninstalling a Universal Messaging client fix, 
please shut down any applications such as Integration Server 
or Enterprise Manager which are using client libraries.

If you are uninstalling a Universal Messaging Enterprise Manager 
fix, you do not need to shut down the Universal Messaging server.

Uninstall using the Software AG Update Manager or 
Command Central (9.5 or later). For instructions, see the 
corresponding documentation 
at http://documentation.softwareag.com.

Note: These instructions can only be used to uninstall the 
most recently installed fix. This action will revert your 
installation to the previously installed fix. You cannot 
apply these instructions to the previously installed fix.



10.0 Globalization

This fix conforms to the internationalization standards of the webMethods 
product suite and includes support for operation in any country, locale, or 
language as specified in the Installing webMethods Products guide. It was not 
tested with non-English configurations and non-ASCII data. However, this fix has
no globalization impact and can be applied to systems running in any supported 
locale or configuration.



10.1 Localization

This fix does not require an updated Language Pack. It might contain new 
messages and these messages will appear in English.



11.0 Copyright

Copyright (c) 2023 Software AG, Darmstadt, Germany and/or Software AG USA Inc., 
Reston, VA, USA, and/or its subsidiaries and/or its affiliates and/or their 
licensors.

The name Software AG and all Software AG product names are either trademarks or 
registered trademarks of Software AG and/or Software AG USA Inc. and/or its 
subsidiaries and/or its affiliates and/or their licensors. Other company and 
product names mentioned herein may be trademarks of their respective owners.

Detailed information on trademarks and patents owned by Software AG and/or its 
subsidiaries is located at http://softwareag.com/licenses.

This software may include portions of third-party products. For third-party 
copyright notices, license terms, additional rights or restrictions, please 
refer to "License Texts, Copyright Notices and Disclaimers of Third Party 
Products". For certain specific third-party license restrictions, please refer 
to section E of the Legal Notices available under "License Terms and Conditions 
for Use of Software AG Products / Copyright and Trademark Notices of Software AG
Products". These documents are part of the product documentation, located at 
http://softwareag.com/licenses and/or in the root installation directory of the 
licensed product(s).



12.0 Contacting Us

Authorized technical support contacts can reach Software AG Global Support in
the following ways:

  Web: https://empower.softwareag.com (online support center)
  
  E-mail: empower@softwareag.com
  
You can find complete contact information in our Global Support Contact 
Directory at:

https://empower.softwareag.com/public_directory.asp

You can also visit our Software AG Developer Communities to access additional 
articles, demos, and tutorials, technical information, samples, useful resources,
online discussion forums moderated by Software AG professionals, and more at:

http://communities.softwareag.com/ecosystem/communities/public/index.html